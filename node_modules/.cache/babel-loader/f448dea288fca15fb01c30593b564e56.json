{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\react-tut\\\\src\\\\components\\\\quote\\\\Quote.js\";\nimport React from 'react';\nimport axios from 'axios';\nexport default function Quote() {\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"https://source.unsplash.com/random/500x200/?inspire,nature\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Let's do something good today!\"), React.createElement(\"a\", {\n    className: \"btn-floating halfway-fab waves-effect waves-light red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"add\"))), React.createElement(\"div\", {\n    className: \"card-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"blockquote\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, getQuote().quote)));\n}\n\nfunction getQuote() {\n  let quote = {};\n  const quoteRestUrl = 'https://quotes.rest/qod?category=inspire';\n  axios.get(quoteRestUrl).then(response => {\n    quote = response.data.contents.quotes[0];\n    console.log(quote);\n  }).catch(e => console.log('error: ' + e));\n  return quote;\n}","map":{"version":3,"sources":["C:\\wamp\\www\\react-tut\\src\\components\\quote\\Quote.js"],"names":["React","axios","Quote","getQuote","quote","quoteRestUrl","get","then","response","data","contents","quotes","console","log","catch","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,GAAgB;AAC3B,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,4DAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,EAGI;AAAG,IAAA,SAAS,EAAC,uDAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAArE,CAHJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,QAAQ,GAAGC,KADhB,CADJ,CANJ,CADJ;AAcH;;AAED,SAASD,QAAT,GAAoB;AAChB,MAAIC,KAAK,GAAG,EAAZ;AAEA,QAAMC,YAAY,GAAG,0CAArB;AACAJ,EAAAA,KAAK,CAACK,GAAN,CAAUD,YAAV,EACKE,IADL,CACUC,QAAQ,IAAI;AACdJ,IAAAA,KAAK,GAAGI,QAAQ,CAACC,IAAT,CAAcC,QAAd,CAAuBC,MAAvB,CAA8B,CAA9B,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACH,GAJL,EAKKU,KALL,CAKWC,CAAC,IAAIH,OAAO,CAACC,GAAR,CAAY,YAAWE,CAAvB,CALhB;AAOA,SAAOX,KAAP;AACH","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function Quote(){\r\n    return(\r\n        <div className=\"card\">\r\n            <div className=\"card-image\">\r\n                <img src=\"https://source.unsplash.com/random/500x200/?inspire,nature\"/>\r\n                <span className=\"card-title\">Let's do something good today!</span>\r\n                <a className=\"btn-floating halfway-fab waves-effect waves-light red\"><i className=\"material-icons\">add</i></a>\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <blockquote>\r\n                    {getQuote().quote}\r\n                </blockquote>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getQuote() {\r\n    let quote = {};\r\n\r\n    const quoteRestUrl = 'https://quotes.rest/qod?category=inspire';\r\n    axios.get(quoteRestUrl)\r\n        .then(response => {\r\n            quote = response.data.contents.quotes[0];\r\n            console.log(quote);\r\n        })\r\n        .catch(e => console.log('error: '+ e));\r\n\r\n    return quote;\r\n}"]},"metadata":{},"sourceType":"module"}